services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.custom.address=:8000"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=manwhameter@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=DEBUG"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - public

  angular-build:
    profiles: ["build"]
    build:
      context: .
      dockerfile: angular-build.dockerfile
    container_name: angular-build
    volumes:
      - ./frontend/dist/frontend:/output

  nginx-angular:
    image: custom-nginx:latest
    container_name: nginx-angular
    volumes:
      - ./frontend/dist/frontend/browser:/usr/share/nginx/html
      - ./nginx/angular.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=manwhameter_public"
      - "traefik.http.routers.nginx-angular.rule=Host(`manwhameter.com`)"
      - "traefik.http.routers.nginx-angular.entrypoints=websecure"
      - "traefik.http.routers.nginx-angular.tls=true"
      - "traefik.http.routers.nginx-angular.tls.certresolver=myresolver"
      - "traefik.http.services.nginx-angular.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx-angular-insecure.rule=Host(`manwhameter.com`)"
      - "traefik.http.routers.nginx-angular-insecure.entrypoints=web"
      - "traefik.http.routers.nginx-angular-insecure.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.no-cache.headers.customrequestheaders.Cache-Control=no-cache, no-store, must-revalidate"
      - "traefik.http.middlewares.no-cache.headers.customrequestheaders.Pragma=no-cache"
      - "traefik.http.middlewares.no-cache.headers.customrequestheaders.Expires=0"
    networks:
      - public

  symfony:
    image: symfony-php:latest
    container_name: symfony
    volumes:
      - ./backend:/var/www/symfony
    networks:
        - backend

  nginx-symfony:
    image: custom-nginx:latest
    container_name: nginx-symfony
    volumes:
      - ./nginx/symfony.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/symfony
    depends_on:
      - symfony
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-symfony.rule=Host(`api.manwhameter.com`)"
      - "traefik.docker.network=manwhameter_public"
      - "traefik.http.routers.nginx-symfony.entrypoints=websecure"
      - "traefik.http.routers.nginx-symfony.tls=true"
      - "traefik.http.routers.nginx-symfony.tls.certresolver=myresolver"
      - "traefik.http.services.nginx-symfony.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx-symfony-insecure.rule=Host(`api.manwhameter.com`)"
      - "traefik.http.routers.nginx-symfony-insecure.entrypoints=web"
      - "traefik.http.routers.nginx-symfony-insecure.middlewares=redirect-to-https"
    networks:
      - backend
      - public

  postgresdb:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - ./db-data:/var/lib/postgresql/data
    networks:
      - backend

networks:
  backend:
    driver: bridge
  public:
    driver: bridge